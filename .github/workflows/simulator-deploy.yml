name: Simulator Deploy to Server

on:
  push:
    branches:
      - main
    paths:
      - 'simulator/**'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          cd simulator
          docker build -t doroha-simulator .
          cd ..
          docker save doroha-simulator > doroha-simulator.tar

      - name: Transfer Docker image to server
        run:  |
          # Write the SSH private key to a temporary file
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ssh_key
          chmod 600 ssh_key
          # Use the temporary file for SCP
          scp -o StrictHostKeyChecking=no -i ssh_key doroha-simulator.tar ${{ secrets.USERNAME }}@165.22.233.166:~/
          # Clean up the temporary key file
          rm ssh_key

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: 165.22.233.166
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p ${{ secrets.SIMULATOR_APP_DIRECTORY }}
            # Remove the existing .tar file, ignore error if it doesn't exist
            rm -f ${{ secrets.SIMULATOR_APP_DIRECTORY }}/doroha-simulator.tar || true
            # Move the new Docker image tar file
            mv ~/doroha-simulator.tar ${{ secrets.SIMULATOR_APP_DIRECTORY }}
            # Stop Running Container
            docker ps -q --filter "publish=8080" | xargs -r docker stop
            # Remove docker image
            docker rmi -f doroha-simulator:latest || true
            # Load docker image
            docker load < ${{ secrets.SIMULATOR_APP_DIRECTORY }}/doroha-simulator.tar
            # Run the new container
            docker run -d -p 8080:8080 --network="host" -e ENV=production doroha-simulator > /dev/null 2>&1 &