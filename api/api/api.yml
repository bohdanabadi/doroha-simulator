openapi: 3.0.0
info:
  title: DorohaDrive API
  version: 1.0.0
paths:
  /v1/points/random-pair:
    get:
      summary: Get random point
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Point'
  /v1/journeys:
    post:
      summary: Persist Journey Points
      responses:
        '201':
          description: Journey Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Journey'
    get:
      summary: Retrieve journeys by status
      description: Returns a list of journeys filtered by the given status.
      parameters:
        - name: status
          in: query
          description: Status of the journeys to retrieve.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A list of journeys.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Journey'
        '500':
          description: "Internal Server Error."
  /v1/journeys/status:
    patch:
      summary: "Update the status of multiple journeys"
      description: "Updates the status of the journeys with the provided IDs."
      requestBody:
        description: "List of journey IDs to update"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JourneyListStatus'
      responses:
        '204':
          description: "The status was successfully updated."
        '400':
          description: "Bad Request. Invalid input or validation error."
        '500':
          description: "Internal Server Error."
components:
  schemas:
    Point:
      type: object
      properties:
        x:
          type: number
          format: double
          example: 30.5628691
        y:
          type: number
          format: double
          example: 50.4244358
    Journey:
      type: object
      properties:
        id:
          type: integer
          format: int32
        startingPoint:
          $ref: '#/components/schemas/Point'
        endingPoint:
          $ref: '#/components/schemas/Point'
        distance:
          type: number
          format: float
          example: 3389.66198843
        dateCreate:
          type: string
          format: date
        status:
          enum:
            - IN QUEUE
            - IN PROGRESS
            - FINISHED
    PotentialJourneyPoints:
      type: object
      properties:
        startingPoint:
          $ref: '#/components/schemas/Point'
        endingPoint:
          $ref: '#/components/schemas/Point'
        distance:
          type: number
          format: float
          example: 3389.66198843
    JourneyListStatus:
        type: object
        properties:
          ids:
            type: array
            items:
              type: integer
              format: int32
          status:
            type: string
    Metric:
      type: object
      properties:
        metricType:
          type: string
        metricTime:
          type: number
          format: float64
        metricHealth:
          type: string
        metricValue:
          type: string
